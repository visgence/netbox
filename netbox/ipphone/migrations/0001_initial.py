# Generated by Django 2.2.6 on 2019-10-08 20:32

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dcim', '0075_cable_devices'),
        ('extras', '0025_objectchange_time_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Partition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=50)),
                ('enforce_unique', models.BooleanField(default=True)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Partition',
                'verbose_name_plural': 'Partitions',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Extension',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('dn', models.CharField(max_length=25)),
                ('status', models.PositiveSmallIntegerField(default=1)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('interface', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extension', to='dcim.Interface')),
                ('partition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='ipphone.Partition')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'DN',
                'verbose_name_plural': 'DNs',
                'ordering': ['id', 'dn', 'partition'],
            },
        ),
    ]
